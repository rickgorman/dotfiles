#!/bin/bash

echo "*** now executing aliases.local"

########################
#  Package Mgmt        #
########################

alias bbd="brew bundle dump --force"

########################
#  Alias Controls      #
########################
alias ba='vim ~/dotfiles-local/aliases.local && source ~/dotfiles-local/aliases.local'

########################
#  Random              #
########################
alias weather="curl wttr.in"

# lock the screen
alias afk="/System/Library/CoreServices/Menu\ Extras/User.menu/Contents/Resources/CGSession -suspend"

########################
#  Navigation          #
########################
alias .='pwd'
alias ..='cd ..'
alias ...='cd ../../'
alias ....='cd ../../../'
alias back='cd -'

alias sl="ls"
alias ls="ls -G"

# list all files colorized in long format
alias ll='ls -laAF'

# print all path entries, one per line
alias path='echo -e ${PATH//:/\\n}'

alias tc-www='cd ~/work/tc-www'
########################
#  Utilities           #
########################

# Intuitive map function
# For example, to list all directories that contain a certain file:
# find . -name .gitattributes | map dirname
alias map="xargs -n1"

# Slice function - extracts columns from output
# ex:  ls -l | slice 5 9  => 9577 awesomefile.txt
slice() {
  AWK_PARAMS=`echo "$@" | sed 's/\([0-9]*\)/\\\$\1" "/g'`
  echo $AWK_PARAMS
  awk "{print $AWK_PARAMS}"
}

# Cutting functions
alias c1="awk '{print \$1}'"
alias c2="awk '{print \$2}'"
alias c3="awk '{print \$3}'"
alias c4="awk '{print \$4}'"
alias c5="awk '{print \$5}'"
alias c6="awk '{print \$6}'"
alias c7="awk '{print \$7}'"
alias c8="awk '{print \$8}'"
alias c9="awk '{print \$9}'"

########################
#  Git                 #
########################
alias gad='git add . && git status'
alias gadot='echo "deprecated -- use gad instead"; git add . && git status'
alias gcm='git commit -m'
alias gco='git checkout'
alias gc-='git checkout -'
alias gcmmm='commit -m && git push'
alias gs='git status'
alias ga='git add'
alias gd='git diff'
alias gp='git push'
alias gds='git diff --staged'
alias gm='git fetch --all && git checkout master && git reset --hard origin/master && gem install bundler && bundle && yarn install && SKIP_YARN=1 be rake db:drop db:create && SKIP_YARN=1 be rake db:migrate && ENV_RAILS=test SKIP_YARN=1 be rake db:migrate && be rake db:drop RAILS_ENV=test && be rake db:create RAILS_ENV=test && be rake db:migrate RAILS_ENV=test'
alias gpushom='git push origin master'
alias gpullom='git pull origin master'
alias gsl='git stash list'
alias gf='git fetch'
alias gfa='git fetch --all'
alias nb='git checkout -b'
alias gcp='git cherry-pick'
alias gl="git log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit"
alias gcompare="git log --left-right --graph --cherry-pick --oneline"
alias gsp="git stash pop"
alias gssp='git stash show -p'
alias grc='git rebase --continue'
alias grs='git rebase --skip'
alias gbg='git bisect good'
alias gbb='git bisect bad'

# reset schema/structure files
alias grss='git checkout HEAD db/schema.read-only.rb; git checkout HEAD db/structure.sql'

# make `g` behave like `git status` with no args, or `git` with args
# g () {
#   if [ $# -eq 0 ]
#   then
#     git status
#   else
#     git "$@"
#   fi
# }
# __git_complete g _git

########################
# Rails                #
########################
alias rake='rails'

########################
#  Hub                 #
########################
alias prl='hub pr list'

########################
#  Bundle              #
########################
alias bi='bundle install'
alias be='bundle exec'
alias bes='bundle exec spring'
alias ber='bundle exec bin/rspec'
alias beg='be guard -P livereload'
alias brc='be rails c'
alias brs='be rails s'
alias brdm='be rake db:migrate'
alias brdbm='brdm'
alias brdbmr='be rake db:migrate; be rake db:rollback'
alias brdbr='be rake db:drop RAILS_ENV=test && be rake db:create RAILS_ENV=test
&& be rake db:migrate RAILS_ENV=test'
alias brr='be rake routes | fzf'
########################
#  Database            #
########################

########################
#  Heroku              #
########################
#CURRENT_BRANCH=`git rev-parse --abbrev-ref HEAD`
#alias gph='git push heroku $CURRENT_BRANCH:master'
alias h='heroku run'

#######################
# Github              #
#######################

newpr () {
  local BASE_BRANCH="master"

  if [ -n "$1" ]; then
    BASE_BRANCH=$1
  fi

  gh pr create --fill -B "${BASE_BRANCH}" && gh pr view --web
}

#################################
#  Killing / Restarting Things  #
#################################
alias killpuma="ps -ef | grep puma | grep -v grep | grep -v killpuma | awk '{print $2}' | xargs kill -9"
alias killspring="ps -ef | grep spring | grep -v grep | grep -v killspring | awk '{print $2}' | xargs kill -9"
alias flushdns='sudo dscacheutil -flushcache;sudo killall -HUP mDNSResponder;echo "✌️  DNS flushed"'

k9() { ps -ef | grep -v grep | grep "$1" | awk '{print $2}' | xargs kill -9 }
