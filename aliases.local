#!/bin/bash

echo "*** now executing aliases.local"

########################
#  Package Mgmt        #
########################

alias bbd="brew bundle dump --force"

########################
#  Alias Controls      #
########################
alias ba='$EDITOR ~/dotfiles-local/aliases.local && source ~/dotfiles-local/aliases.local && rcup'
alias src='source ~/dotfiles-local/aliases.local'

########################
#  Random              #
########################
alias weather="curl wttr.in/?uF"
alias wtr="weather"
alias weatherc="curl -s 'wttr.in/?format=3' | pbcopy && echo 'Weather copied to clipboard!' && pbpaste"
alias cheat="curl cht.sh"

# lock the screen
alias afk="/System/Library/CoreServices/Menu\ Extras/User.menu/Contents/Resources/CGSession -suspend"

alias yuri="Say -v Yuri"

# fix an issue where the /usr/local/bin/code script failes when run with zsh
alias code='/bin/bash /usr/local/bin/code'

########################
#  Navigation          #
########################
alias .='pwd'
alias ...='cd ../../'
alias ....='cd ../../../'
alias back='cd -'
alias up='cd ..'

alias sl="ls"
alias ls="ls -G"

# list all files colorized in long format
alias ll='ls -laAF'

# print all path entries, one per line
alias path='echo -e ${PATH//:/\\n}'

# specific directory shortcuts
alias home='cd ~'
alias dotfiles='cd ~/dotfiles'
alias work='cd ~/work'
alias web='cd ~/work/web'
alias extension='cd ~/work/extension'

########################
#  Utilities           #
########################

# Intuitive map function
# For example, to list all directories that contain a certain file:
# find . -name .gitattributes | map dirname
alias map="xargs -n1"

# Sum function - adds a series of numbers
# ex:  echo "1 2 3" | sum => 6
alias sum="jq -s 'add'"

# Slice function - extracts columns from output
# ex:  ls -l | slice 5 9  => 9577 awesomefile.txt
slice() {
  AWK_PARAMS=`echo "$@" | sed 's/\([0-9]*\)/\\\$\1" "/g'`
  awk "{print $AWK_PARAMS}"
}

# Cutting functions
alias c1="awk '{print \$1}'"
alias c2="awk '{print \$2}'"
alias c3="awk '{print \$3}'"
alias c4="awk '{print \$4}'"
alias c5="awk '{print \$5}'"
alias c6="awk '{print \$6}'"
alias c7="awk '{print \$7}'"
alias c8="awk '{print \$8}'"
alias c9="awk '{print \$9}'"
alias c10="awk '{print \$10}'"
alias c11="awk '{print \$11}'"
alias c12="awk '{print \$12}'"
alias c13="awk '{print \$13}'"

# Row extraction functions
alias r1="sed -n '1p'"
alias r2="sed -n '2p'"
alias r3="sed -n '3p'"
alias r4="sed -n '4p'"
alias r5="sed -n '5p'"
alias r6="sed -n '6p'"
alias r7="sed -n '7p'"
alias r8="sed -n '8p'"
alias r9="sed -n '9p'"

# clipboard interaction
alias c="pbcopy"
alias p="pbpaste"

########################
#  Better tools        #
########################

man() {
  env MANPAGER="sh -c 'col -bx | bat -l man -p'" /usr/bin/man "$@"
}

########################
#  Claude              #
########################

alias cc="claude"

########################
#  Git                 #
#################ß######
alias gad='git add . && git status'
alias gr='git reset HEAD --'
alias gcm='git commit -m'
alias gco='git checkout'
alias gc-='git checkout -'
alias gs='git status'
alias ga='git add'
alias gd='git diff --ignore-all-space'
alias gp='git push'
alias gpo='git push -u origin $(git branch --show-current)'
alias gds='git diff --staged --ignore-all-space'
alias gpushom='git push origin ${MASTER_BRANCH_NAME}'
alias gpullom='git pull origin ${MASTER_BRANCH_NAME}'
alias gsl='git stash list'
alias stash='git stash --include-untracked'
alias gf='git fetch'
alias gfa='git fetch --all'
alias nb='git checkout -b'
alias gcp='git cherry-pick'
alias gl="git log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit"
alias gcompare="git log --left-right --graph --cherry-pick --oneline"
alias gsp="git stash pop"
alias gssp='git stash show -p'
alias grc='git rebase --continue'
alias grs='git rebase --skip'
alias gbg='git bisect good'
alias gbb='git bisect bad'
alias grim='git rebase -i ${MASTER_BRANCH_NAME}'
alias grid='git rebase -i develop'
alias main='git checkout main && g pull'
alias gpfl='git push --force-with-lease'

# reset schema/structure files
alias grss='git checkout HEAD db/schema.read-only.rb; git checkout HEAD db/structure.sql'

# reset vcr_cassettes and remove untracked ones
alias clean_vcr='git restore spec/vcr_cassettes; git clean -fd spec/vcr_cassettes'

# Git branch pruning
source ~/dotfiles-local/functions/gpruneomg.sh

alias develop='git checkout develop'

########################
# Ruby                 #
########################

update_ruby_version() {
  if ! command -v asdf &> /dev/null; then
    echo "Error: asdf is not installed or not in the PATH."
    return 1
  fi

  if [[ ! -f .ruby-version ]]; then
    echo "Error: .ruby-version not found. You're in the wrong directory, dude."
    return 1
  fi

  ruby_version=$(cat .ruby-version | sed 's/^ruby-//')

  echo "running asdf plugin update ruby..."
  asdf plugin update ruby

  echo "running asdf install ruby $ruby_version..."
  if ! asdf install ruby "$ruby_version"; then
    echo "Error: Failed to install Ruby version $ruby_version with asdf."
    return 1
  fi

  # Step 6: Set the local Ruby version
  asdf local ruby "$ruby_version"

  # Step 7: Set the global Ruby version
  asdf global ruby "$ruby_version"

  echo "Ruby version $ruby_version installed and set (local and global)."
}

########################
# Rails                #
########################
alias r='bundle exec rails'
alias sp='RAILS_ENV=test bundle exec rails parallel:spec'
sp2() {
  local output_file=$(mktemp)

  # Use script to preserve colors while capturing output
  script -q "$output_file" bash -c "RAILS_ENV=test bundle exec rails parallel:spec"

  # Extract failure sections after the run completes
  local failures=$(grep -A 50 "Failed examples:" "$output_file" | grep -E "(rspec|# )" | head -20)

  # If there are failures, display them at the end
  if [ -n "$failures" ]; then
    echo -e "\n\033[1;31m═══════════════════════════════════════════════════════════════════════════════\033[0m"
    echo -e "\033[1;31m                            AGGREGATED FAILURES                               \033[0m"
    echo -e "\033[1;31m═══════════════════════════════════════════════════════════════════════════════\033[0m\n"
    echo "$failures"
    echo -e "\n\033[1;31m═══════════════════════════════════════════════════════════════════════════════\033[0m"
  fi

  # Clean up
  rm "$output_file"
}
alias sr='RECORD_RUNTIME=true RAILS_ENV=test bundle exec rails parallel:spec'
alias sof='RAILS_ENV=test bundle exec rspec --only-failures'
alias spof='sp; sof'

########################
#  Bundle              #
########################
alias be='~/.asdf/shims/bundle exec'
alias ber='be bin/rspec'
alias beg='be guard -P livereload'
alias brc='be rails c'
alias brs='be rails s'
alias brdm='be rails db:migrate'
alias brdbm='brdm'
alias brdbmr='be rails db:migrate; be rails db:rollback'
alias brdbr='be rails db:drop RAILS_ENV=test && be rails db:create RAILS_ENV=test && be rails db:migrate RAILS_ENV=test'
alias brr='be rails routes | fzf'

########################
#  Database            #
########################

########################
#  Heroku              #
########################
#CURRENT_BRANCH=`git rev-parse --abbrev-ref HEAD`
#alias gph='git push heroku $CURRENT_BRANCH:master'
alias h='heroku run'

#######################
# Github              #
#######################

# PR creation
source ~/dotfiles-local/functions/newpr.sh

# Squash merge helper
source ~/dotfiles-local/functions/squash_merge.sh

# PR description autofiller
source ~/dotfiles-local/functions/pr-autofill-description.sh

alias pr="gh pr view --web"
alias watchchecks="if sleep 4 && gh pr checks --watch -i 1 && sleep 2 && gh pr checks --watch -i 1; then yuri 'yuri says, ready for merge'; else yuri 'yuri says, no code for you, get new job'; circleci open; fi"
alias ready="gh pr ready && gh pr edit --add-reviewer FlorenceHC/hedgehog"
alias rdy="ready"
alias checks="i18n-tasks health && i18n-tasks normalize && rubocop -a"

#################################
#  Process Management
#################################

alias flushdns='sudo dscacheutil -flushcache;sudo killall -HUP mDNSResponder;echo "✌️  DNS flushed"'
alias k9postgres='brew services stop postgresql@17; k9 postgres; brew services start postgresql@17'
alias k9puma='k9 puma; k9 puma-dev; k9 puma; k9 puma-dev'
alias rrrr='k9puma; k9postgres; bundle exec rails db:drop db:create db:migrate dev:prime'
alias plist='ps -ef | grep -v grep | grep'

# Docker restart helper
source ~/dotfiles-local/functions/docker_restart.sh

k9() { ps -ef | grep -v grep | grep "$1" | awk '{print $2}' | xargs kill -9 }


######################
# Depoliticize tools #
######################

i18n() {
  i18n-tasks "$@" 2>/dev/null
}

#################
# Video editing #
#################

# FFmpeg two-pass encoding
source ~/dotfiles-local/functions/ffmpeg_two_pass.sh
