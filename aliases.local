#!/bin/bash

########################
#  Package Mgmt        #
########################

alias bbd="brew bundle dump --force"

########################
#  Alias Controls      #
########################
alias ba='vim ~/dotfiles-local/aliases.local && source ~/dotfiles-local/aliases.local'

########################
#  Random              #
########################
alias irb="pry"
alias weather="curl wttr.in/nyc"

# lock the screen
alias afk="/System/Library/CoreServices/Menu\ Extras/User.menu/Contents/Resources/CGSession -suspend"

########################
#  Navigation          #
########################
alias .='pwd'
alias ..='cd ..'
alias ...='cd ../../'
alias ....='cd ../../../'
alias back='cd -'

alias sl="ls"
alias ls="ls -G"

# list all files colorized in long format
alias ll='ls -laAF'

# print all path entries, one per line
alias path='echo -e ${PATH//:/\\n}'

alias cmn-admin='cd ~/Workspace/cmn-admin'

########################
#  Utilities           #
########################

# Intuitive map function
# For example, to list all directories that contain a certain file:
# find . -name .gitattributes | map dirname
alias map="xargs -n1"

########################
#  Git                 #
########################
alias gad='git add . && git status'
alias gadot='echo "deprecated -- use gad instead"; git add . && git status'
alias gcm='git commit -m'
alias gco='git checkout'
alias gc-='git checkout -'
alias gcmmm='commit -m && git push'
alias gs='git status'
alias ga='git add'
alias gd='git diff'
alias gp='git push'
alias gds='git diff --staged'
alias gm='git fetch --all && git checkout master && git reset --hard origin/master && gem install bundler && bundle && yarn install && SKIP_YARN=1 be rake db:drop db:create && SKIP_YARN=1 be rake db:migrate && ENV_RAILS=test SKIP_YARN=1 be rake db:migrate && be rake db:drop RAILS_ENV=test && be rake db:create RAILS_ENV=test && be rake db:migrate RAILS_ENV=test'
alias gpushom='git push origin master'
alias gpullom='git pull origin master'
alias gsl='git stash list'
alias gf='git fetch'
alias gfa='git fetch --all'
alias nb='git checkout -b'
alias gcp='git cherry-pick'
alias gl="git log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit"

# reset schema/structure files
alias grss='git checkout HEAD db/schema.read-only.rb; git checkout HEAD db/structure.sql'

# make `g` behave like `git status` with no args, or `git` with args
g () {
  if [ $# -eq 0 ]
  then
    git status
  else
    git "$@"
  fi
}
__git_complete g _git

########################
#  Hub                 #
########################
alias prl='hub pr list'

########################
#  Bundle              #
########################
alias bi='bundle install'
alias be='bundle exec'
alias bes='bundle exec spring'
alias beg='be guard -P livereload'
alias brc='be rails c'
alias brdm='be rake db:migrate'
alias brdbm='brdm'

########################
#  Engine Things       #
########################
alias connect_by='be bin/engem connect_by'
alias chat_by='be bin/engem chat_by'

########################
#  Database            #
########################
alias update-common-dev='be rake db:drop; be rake db:create; curl -o latest.dump $(heroku pg:backups public-url --app cmn-admin) && pg_restore -c  -O -d common -U common latest.dump; be rake db:migrate'
alias update-test-db='be rake db:drop RAILS_ENV=test; be rake db:create RAILS_ENV=test; be rake db:migrate RAILS_ENV=test'

########################
#  Heroku              #
########################
#CURRENT_BRANCH=`git rev-parse --abbrev-ref HEAD`
#alias gph='git push heroku $CURRENT_BRANCH:master'
alias h='heroku run'
alias hrc='heroku run bundle exec rails c -a cmn-admin'

#################################
#  Killing / Restarting Things  #
#################################
alias killpuma="ps -ef | grep puma | grep -v grep | grep -v killpuma | awk '{print $2}' | xargs kill -9"
alias killspring="ps -ef | grep spring | grep -v grep | grep -v killspring | awk '{print $2}' | xargs kill -9"
alias flushdns='sudo dscacheutil -flushcache;sudo killall -HUP mDNSResponder;echo "✌️  DNS flushed"'
