alias docker_console='docker-compose exec puma bundle exec rails console'
alias docker_console_prod_ro='docker-compose exec -e DATABASE_URL=$PROD_RO puma bundle exec rails console'
alias docker_console_qa1='docker-compose exec -e DATABASE_URL=$QA1_DB puma bundle exec rails console'
alias docker_console_qa2='docker-compose exec -e DATABASE_URL=$QA2_DB puma bundle exec rails console'
alias docker_rspec='docker-compose exec test bundle exec rspec '
alias docker_spring_rspec='docker-compose exec test bundle exec spring rspec '
alias docker_exec='docker-compose exec'
alias docker_run='docker-compose run'
alias docker_start='docker-sync-stack start'
alias docker_stop='docker-compose down'
alias docker_destroy='docker rmi -f `docker images -q -a`'
alias docker_bash='docker-compose exec puma bash'
alias docker_status='docker-compose ps'
alias docker_sync_clean='docker-sync clean'
alias docker_rake='docker-compose exec puma bundle exec rake'
alias docker_routes='docker-compose exec puma bundle exec rake routes'
alias docker_db_migrate='docker-compose run puma bundle exec rake db:migrate'
alias docker_yarn_test='docker-compose exec frontend yarn test'
alias docker_yarn_add='docker-compose exec frontend yarn add'
alias docker_up='docker-compose up'
 
function docker_restart() {
  docker_stop;
  docker_sync_clean;
  docker_start;
}
 
function docker_refresh() {
  docker_stop;
  docker_destroy;
  docker_sync_clean;
  aws_login
  docker_start;
}
 
function docker_tail() {
  docker-compose exec $1 tail -f log/$1.log
}
 
function docker_pry {
  puma_pid=$(docker ps | grep tc-www_puma | awk '{print $1}')
  docker attach $puma_pid
}
 
function docker_synced() {
 docker-compose exec test cat $1 | diff $1 - -w -s
}
 
function docker_bash() {
  `docker-compose exec $1 bash`
}
 
function docker_bundle() {
  docker-compose exec $1 bundle install
}
 
function docker_copy() {
  docker cp $(docker ps -qf "name=puma"):tc-www/$1 $1
}
 
function aws_login() {
  $(aws ecr get-login --no-include-email --region us-east-1)
}
 
function docker_remove_image() {
  docker rmi -f `docker_get_image_id $1`
}
 
function docker_get_image_id() {
  docker images | grep $1 | awk '{print $3}'
}
 
function docker_rake() {
  commands_array=( $@ )
  len=${#commands_array[@]}
  other_commands=${commands_array[@]:2:$len-1}
 
  docker-compose exec $1 rake $2 $other_commands
}
 
function docker_migrate_db() {
  docker_rake $1 $2 && docker_copy db/structure.sql
}
 
function docker_migrate() {
  docker_migrate_db $1 db:migrate
}
 
function docker_rollback() {
  docker_migrate_db $1 db:rollback
}
 
alias docker_decsendents='python3 .docker_descendents.py '
