// 1 Place your key bindings in this file to override the defaultsauto[]
[
  {
    "key": "ctrl+b",
    "command": "gitlens.toggleFileBlame"
  },
  {
    "key": "alt+cmd+b",
    "command": "-bookmarks.toggle",
    "when": "editorTextFocus"
  },
  {
    "key": "cmd+\\",
    "command": "workbench.action.toggleSidebarVisibility"
  },
  {
    "key": "cmd+b",
    "command": "-workbench.action.toggleSidebarVisibility"
  },
  {
    "key": "cmd+\\",
    "command": "-workbench.action.splitEditor"
  },
  {
    "key": "ctrl+shift+9",
    "command": "workbench.action.toggleAuxiliaryBar"
  },
  {
    "key": "shift+cmd+\\",
    "command": "-editor.action.jumpToBracket",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+cmd+\\",
    "command": "workbench.files.action.showActiveFileInExplorer"
  },
  {
    "key": "f16 right",
    "command": "-workbench.action.moveActiveEditorGroupRight"
  },
  {
    "key": "f16 right",
    "command": "workbench.action.navigateRight"
  },
  {
    "key": "f16 left",
    "command": "workbench.action.navigateLeft"
  },
  {
    "key": "f16 down",
    "command": "workbench.action.navigateDown"
  },
  {
    "key": "f16 up",
    "command": "workbench.action.navigateUp"
  },
  {
    "key": "f16 shift+up",
    "command": "workbench.action.splitEditorUp"
  },
  {
    "key": "f16 shift+down",
    "command": "workbench.action.splitEditorDown"
  },
  {
    "key": "f16 shift+right",
    "command": "workbench.action.splitEditorRight"
  },
  {
    "key": "f16 shift+left",
    "command": "workbench.action.splitEditorLeft"
  },
  {
    "key": "cmd+t",
    "command": "workbench.action.quickOpen"
  },
  {
    "key": "cmd+p",
    "command": "-workbench.action.quickOpen"
  },
  {
    "key": "cmd+p",
    "command": "workbench.action.showAllSymbols"
  },
  {
    "key": "cmd+t",
    "command": "-workbench.action.showAllSymbols"
  },
  {
    "key": "ctrl+shift+]",
    "command": "extension.rubyBlockToggle"
  },
  {
    "key": "ctrl+cmd+b",
    "command": "-extension.rubyBlockToggle"
  },
  {
    "key": "ctrl+shift+1",
    "command": "erb.toggleTags",
    "when": "editorTextFocus && editorLangId == 'erb'"
  },
  {
    "key": "ctrl+tab",
    "command": "-workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup",
    "when": "!activeEditorGroupEmpty"
  },
  {
    "key": "ctrl+tab",
    "command": "-workbench.action.quickOpenNavigateNextInEditorPicker",
    "when": "inEditorsPicker && inQuickOpen"
  },
  {
    "key": "shift+cmd+]",
    "command": "-workbench.action.nextEditor"
  },
  {
    "key": "shift+cmd+[",
    "command": "-workbench.action.previousEditor"
  },
  {
    "key": "ctrl+shift+tab",
    "command": "-workbench.action.quickOpenLeastRecentlyUsedEditorInGroup",
    "when": "!activeEditorGroupEmpty"
  },
  {
    "key": "ctrl+shift+tab",
    "command": "-workbench.action.quickOpenNavigatePreviousInEditorPicker",
    "when": "inEditorsPicker && inQuickOpen"
  },
  {
    "key": "ctrl+tab",
    "command": "workbench.action.nextEditorInGroup"
  },
  {
    "key": "f16 alt+cmd+right",
    "command": "-workbench.action.nextEditorInGroup"
  },
  {
    "key": "ctrl+shift+tab",
    "command": "workbench.action.previousEditorInGroup"
  },
  {
    "key": "f16 alt+cmd+left",
    "command": "-workbench.action.previousEditorInGroup"
  },
  {
    "key": "alt+a",
    "command": "explorer.newFile",
    "when": "explorerViewletFocus"
  },
  {
    "key": "alt+f",
    "command": "explorer.newFolder",
    "when": "explorerViewletFocus"
  },
  {
    "key": "alt+r",
    "command": "renameFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "f16 shift+cmd+s",
    "command": "workbench.action.openGlobalKeybindings"
  },
  {
    "key": "f16 cmd+s",
    "command": "-workbench.action.openGlobalKeybindings"
  },
  {
    "key": "cmd+enter",
    "command": "git.stageSelectedRanges",
    "when": "isInDiffEditor"
  },
  {
    "key": "f16 alt+cmd+s",
    "command": "-git.stageSelectedRanges",
    "when": "isInDiffEditor"
  },
  {
    "key": "shift+cmd+enter",
    "command": "git.unstageSelectedRanges",
    "when": "isInDiffEditor"
  },
  {
    "key": "f16 cmd+n",
    "command": "-git.unstageSelectedRanges",
    "when": "isInDiffEditor"
  },
  {
    "key": "alt+enter",
    "command": "git.stage",
    "when": "workbench.scm.active"
  },
  {
    "key": "shift+alt+enter",
    "command": "git.unstage"
  },
  {
    "key": "f16 h",
    "command": "workbench.action.focusLeftGroup"
  },
  {
    "key": "f16 cmd+left",
    "command": "-workbench.action.focusLeftGroup"
  },
  {
    "key": "f16 l",
    "command": "workbench.action.focusRightGroup"
  },
  {
    "key": "f16 cmd+right",
    "command": "-workbench.action.focusRightGroup"
  },
  {
    "key": "f16 k",
    "command": "workbench.action.focusAboveGroup"
  },
  {
    "key": "f16 cmd+up",
    "command": "-workbench.action.focusAboveGroup"
  },
  {
    "key": "f16 j",
    "command": "workbench.action.focusBelowGroup"
  },
  {
    "key": "f16 cmd+down",
    "command": "-workbench.action.focusBelowGroup"
  },
  {
    "key": "f16 right",
    "command": "workbench.action.moveActiveEditorGroupRight"
  },
  {
    "key": "f16 e",
    "command": "workbench.action.evenEditorWidths"
  },
  {
    "key": "f16 t",
    "command": "extension.railsGoToSpec",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+cmd+y",
    "command": "-extension.railsGoToSpec",
    "when": "editorTextFocus"
  },
  {
    "key": "f16 shift+cmd+right",
    "command": "-workbench.action.moveEditorRightInGroup"
  },
  {
    "key": "f16 shift+cmd+left",
    "command": "-workbench.action.moveEditorLeftInGroup"
  },
  {
    "key": "f16 shift+h",
    "command": "workbench.action.moveEditorToLeftGroup"
  },
  {
    "key": "f16 shift+l",
    "command": "workbench.action.moveEditorToRightGroup"
  },
  {
    "key": "f16 down",
    "command": "-workbench.action.moveActiveEditorGroupDown"
  },
  {
    "key": "f16 up",
    "command": "-workbench.action.moveActiveEditorGroupUp"
  },
  {
    "key": "f16 c",
    "command": "editor.action.inlineSuggest.trigger",
    "when": "config.github.copilot.inlineSuggest.enable && editorTextFocus && !editorHasSelection && !inlineSuggestionsVisible"
  },
  {
    "key": "alt+\\",
    "command": "-editor.action.inlineSuggest.trigger",
    "when": "config.github.copilot.inlineSuggest.enable && editorTextFocus && !editorHasSelection && !inlineSuggestionsVisible"
  },
  {
    "key": "f16 g",
    "command": "workbench.action.toggleAuxiliaryBar"
  },
  {
    "key": "f16 z",
    "command": "workbench.action.toggleZenMode"
  },
  {
    "key": "f16 z",
    "command": "-workbench.action.toggleZenMode"
  },
  {
    "key": "f16 f",
    "command": "workbench.action.minimizeOtherEditors"
  },
  {
    "key": "f16 shift+k",
    "command": "workbench.action.moveEditorToAboveGroup"
  },
  {
    "key": "f16 shift+j",
    "command": "workbench.action.moveEditorToBelowGroup"
  },
  {
    "key": "alt+t",
    "command": "workbench.action.quickOpen"
  },
  {
    "key": "f16 b",
    "command": "gitlens.toggleFileBlame",
    "when": "editorTextFocus && config.gitlens.keymap == 'alternate' && gitlens:activeFileStatus =~ /blameable/"
  },
  {
    "key": "alt+b",
    "command": "-gitlens.toggleFileBlame",
    "when": "editorTextFocus && config.gitlens.keymap == 'alternate' && gitlens:activeFileStatus =~ /blameable/"
  },
  {
    "key": "f16 b",
    "command": "gitlens.toggleFileBlame",
    "when": "editorTextFocus && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /blameable/"
  },
  {
    "key": "alt+cmd+g b",
    "command": "-gitlens.toggleFileBlame",
    "when": "editorTextFocus && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /blameable/"
  },
  {
    "key": "f16 \\",
    "command": "workbench.action.toggleSidebarVisibility"
  },
  {
    "key": "f16 d",
    "command": "editor.action.revealDefinition",
    "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
  },
  {
    "key": "f16 f16 j",
    "command": "extension.jumpy-word"
  },
  {
    "key": "shift+alt+p",
    "command": "workbench.action.showCommands"
  },
  {
    "key": "f16 shift+r",
    "command": "railsTestRunner.runTestAtLine"
  },
  {
    "key": "f16 shift+m",
    "command": "kb-macro.startRecording",
    "when": "!kb-macro.recording && config.keyboardMacro.recordingShortcuts == 'Option1'"
  },
  {
    "key": "ctrl+alt+r",
    "command": "-kb-macro.startRecording",
    "when": "!kb-macro.recording && config.keyboardMacro.recordingShortcuts == 'Option1'"
  },
  {
    "key": "ctrl+shift+alt+r",
    "command": "-kb-macro.finishRecording",
    "when": "kb-macro.recording && config.keyboardMacro.recordingShortcuts == 'Option2'"
  },
  {
    "key": "ctrl+shift+alt+r",
    "command": "-kb-macro.startRecording",
    "when": "!kb-macro.recording && config.keyboardMacro.recordingShortcuts == 'Option2'"
  },
  {
    "key": "f16 shift+m",
    "command": "kb-macro.finishRecording",
    "when": "kb-macro.recording && config.keyboardMacro.recordingShortcuts == 'Option1'"
  },
  {
    "key": "ctrl+alt+r",
    "command": "-kb-macro.finishRecording",
    "when": "kb-macro.recording && config.keyboardMacro.recordingShortcuts == 'Option1'"
  },
  {
    "key": "ctrl+shift+alt+p",
    "command": "-kb-macro.cancelRecording",
    "when": "kb-macro.recording && config.keyboardMacro.recordingShortcuts == 'Option2'"
  },
  {
    "key": "f16 x",
    "command": "kb-macro.cancelRecording",
    "when": "kb-macro.recording && config.keyboardMacro.recordingShortcuts == 'Option1'"
  },
  {
    "key": "ctrl+alt+p",
    "command": "-kb-macro.cancelRecording",
    "when": "kb-macro.recording && config.keyboardMacro.recordingShortcuts == 'Option1'"
  },
  {
    "key": "ctrl+shift+alt+p",
    "command": "-kb-macro.playback",
    "when": "!kb-macro.recording && config.keyboardMacro.recordingShortcuts == 'Option2'"
  },
  {
    "key": "f16 m",
    "command": "kb-macro.playback",
    "when": "!kb-macro.recording && config.keyboardMacro.recordingShortcuts == 'Option1'"
  },
  {
    "key": "ctrl+alt+p",
    "command": "-kb-macro.playback",
    "when": "!kb-macro.recording && config.keyboardMacro.recordingShortcuts == 'Option1'"
  },
  {
    "key": "f16 r",
    "command": "railsTestRunner.runLastTests"
  },
  {
    "key": "f16 x",
    "command": "editor.action.deleteLines",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "shift+f16",
    "command": "-editor.action.deleteLines",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "f12",
    "command": "-editor.action.revealDefinition",
    "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
  },
  {
    "key": "shift+alt+f12",
    "command": "-references-view.findReferences",
    "when": "editorHasReferenceProvider"
  },
  {
    "key": "f16 shift+g",
    "command": "github.copilot.interactiveEditor.generate"
  },
  {
    "key": "ctrl+b",
    "command": "-kb-macro.wrap",
    "when": "kb-macro.active && textInputFocus"
  },
  {
    "key": "f16 b",
    "command": "gitlens.toggleFileBlame",
    "when": "editorTextFocus && config.gitlens.keymap == 'alternate' && resource in 'gitlens:tabs:blameable'"
  },
  {
    "key": "alt+b",
    "command": "-gitlens.toggleFileBlame",
    "when": "editorTextFocus && config.gitlens.keymap == 'alternate' && resource in 'gitlens:tabs:blameable'"
  },
  {
    "key": "f16 shift+c",
    "command": "workbench.panel.chat.view.copilot.focus"
  },
  {
    "key": "f16 i",
    "command": "editor.action.inlineDiffs.acceptAllAcrossAllEditors",
    "when": "editorHasPromptBar && editorTextFocus || editorTextFocus && hasDisplayedDiff"
  },
  {
    "key": "cmd+pausebreak",
    "command": "-editor.action.inlineDiffs.acceptAllAcrossAllEditors",
    "when": "editorHasPromptBar && editorTextFocus || editorTextFocus && hasDisplayedDiff"
  },
  {
    "key": "f16 s",
    "command": "editor.action.sortLinesAscending"
  },
  {
    "key": "f16 shift+s",
    "command": "editor.action.sortLinesDescending"
  }
]
